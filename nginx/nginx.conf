worker_processes 1;

events {
    worker_connections 1024;
}

http {

    # Configurações de otimização
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    server {
        listen 443 ssl;
        server_name _;

        # --- Configurações de SSL/TLS ---
        ssl_certificate /etc/nginx/certs/server.fullchain.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        
        # Protocolos e cifras seguros
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # --- Configurações de mTLS ---
        ssl_client_certificate /etc/nginx/certs/ca.crt;
        ssl_verify_client optional;
        ssl_verify_depth 2;

        # --- Logging ---
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # --- Health Check ---
        # O ALB usará isso para verificar a saúde do Nginx.
        # Não requer mTLS.
        location /health {
            # Como a verificação é opcional, esta location é acessível sem certificado
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # --- Proxy Reverso para a API ---
        location / {
            # Verifica se o certificado do cliente foi validado com sucesso
            if ($ssl_client_verify != "SUCCESS") {
                return 403;
            }
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Adiciona headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Client-Verify $ssl_client_verify;
            proxy_set_header X-Client-S-DN $ssl_client_s_dn;
            proxy_set_header X-Client-I-DN $ssl_client_i_dn;
            proxy_set_header X-Client-Serial $ssl_client_serial;

            # Proxy pass para a API
            proxy_pass http://api.minha-api.local:5000;
        }
    }
}